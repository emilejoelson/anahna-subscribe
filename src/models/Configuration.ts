import mongoose, { Document, Model } from 'mongoose';

export interface IConfiguration extends Document {
  email?: string;
  emailName?: string;
  password?: string;
  enableEmail?: boolean;
  formEmail?: string;
  sendGridApiKey?: string;
  sendGridEnabled?: boolean;
  sendGridEmail?: string;
  sendGridEmailName?: string;
  sendGridPassword?: string;
  firebaseKey?: string;
  authDomain?: string;
  projectId?: string;
  storageBucket?: string;
  msgSenderId?: string;
  appId?: string;
  measurementId?: string;
  vapidKey?: string;
  dashboardSentryUrl?: string;
  webSentryUrl?: string;
  apiSentryUrl?: string;
  customerAppSentryUrl?: string;
  restaurantAppSentryUrl?: string;
  riderAppSentryUrl?: string;
  googleApiKey?: string;
  cloudinaryUploadUrl?: string;
  cloudinaryApiKey?: string;
  webAmplitudeApiKey?: string;
  appAmplitudeApiKey?: string;
  webClientID?: string;
  androidClientID?: string;
  iOSClientID?: string;
  expoClientID?: string;
  googleMapLibraries?: string;
  googleColor?: string;
  termsAndConditions?: string;
  privacyPolicy?: string;
  testOtp?: string;
  deliveryRate?: number;
  costType?: string;
  clientId?: string;
  clientSecret?: string;
  sandbox?: boolean;
  publishableKey?: string;
  secretKey?: string;
  twilioAccountSid?: string;
  twilioAuthToken?: string;
  twilioPhoneNumber?: string;
  twilioEnabled?: boolean;
  skipEmailVerification?: boolean;
  skipMobileVerification?: boolean;
  currency?: string;
  currencySymbol?: string;
}

const ConfigurationSchema = new mongoose.Schema({
  email: String,
  emailName: String,
  password: String,
  enableEmail: Boolean,
  formEmail: String,
  sendGridApiKey: String,
  sendGridEnabled: Boolean,
  sendGridEmail: String,
  sendGridEmailName: String,
  sendGridPassword: String,
  firebaseKey: String,
  authDomain: String,
  projectId: String,
  storageBucket: String,
  msgSenderId: String,
  appId: String,
  measurementId: String,
  vapidKey: String,
  dashboardSentryUrl: String,
  webSentryUrl: String,
  apiSentryUrl: String,
  customerAppSentryUrl: String,
  restaurantAppSentryUrl: String,
  riderAppSentryUrl: String,
  googleApiKey: String,
  cloudinaryUploadUrl: String,
  cloudinaryApiKey: String,
  webAmplitudeApiKey: String,
  appAmplitudeApiKey: String,
  webClientID: String,
  androidClientID: String,
  iOSClientID: String,
  expoClientID: String,
  googleMapLibraries: String,
  googleColor: String,
  termsAndConditions: String,
  privacyPolicy: String,
  testOtp: String,
  deliveryRate: Number,
  costType: String,
  clientId: String,
  clientSecret: String,
  sandbox: Boolean,
  publishableKey: String,
  secretKey: String,
  twilioAccountSid: String,
  twilioAuthToken: String,
  twilioPhoneNumber: String,
  twilioEnabled: Boolean,
  skipEmailVerification: Boolean,
  skipMobileVerification: Boolean,
  currency: String,
  currencySymbol: String,
});

export default mongoose.model<IConfiguration, Model<IConfiguration>>('Configuration', ConfigurationSchema);